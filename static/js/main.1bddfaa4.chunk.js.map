{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"0NAEMA,EAAc,WAClB,OACE,+BACE,4BACE,oCACA,sCAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,wBAAIC,IAAKD,GACP,4BAAKA,GAAgB,GACrB,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACE,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAMR,OAAO,+BAAQJ,IAcFU,EAXD,SAACX,GAAW,IACjBE,EAAkCF,EAAlCE,cAAeQ,EAAmBV,EAAnBU,gBAEtB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,M,OCiBjDE,E,4MAlDbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAGPM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBV,EADgB,EAChBA,KAAMW,EADU,EACVA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,K,EAIZE,WAAa,WACX,EAAKpB,MAAMqB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGX,IAAD,EACeS,KAAKR,MAAnBP,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,8BACE,2BAAOe,QAAQ,QAAf,QACA,2BACEC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eAEjB,2BAAOQ,QAAQ,OAAf,OACA,2BACEC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eAEjB,2BACES,KAAK,SACLN,MAAM,SACNT,QAASa,KAAKF,kB,GA7CLO,aCiCJC,E,4MA9Bbd,MAAQ,CACNe,WAAY,I,EAGdnB,gBAAkB,SAACL,GAAW,IACrBwB,EAAc,EAAKf,MAAnBe,WACL,EAAKV,SAAS,CACdU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM3B,Q,EAKnBgB,aAAe,SAACU,GACd,EAAKZ,SAAS,CAACU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,uDAG9C,IACAF,EAAeP,KAAKR,MAApBe,WAER,OACE,yBAAKI,UAAU,aACb,kBAAC,EAAD,CAAO/B,cAAe2B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,kBAAC,EAAD,CAAMW,aAAcC,KAAKD,oB,GAxBfM,a,MCElBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.1bddfaa4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  );\n};\n\nconst TableBody = (props) => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{index = index + 1}</td>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    )\n  })\n  \n  return <tbody>{rows}</tbody>\n}\n\nconst Table = (props) => {\n  const {characterData, removeCharacter} = props\n\n  return (\n    <table>\n      <TableHeader />\n      <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n    </table>\n  )\n}\n\nexport default Table;\n\n\n\n\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  initialState = {\n    name: \"\",\n    job: \"\",\n  };\n\n  state = this.initialState;\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state);\n    this.setState(this.initialState);\n  };\n\n  render() {\n    const { name, job } = this.state;\n\n    return (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          id=\"job\"\n          value={job}\n          onChange={this.handleChange}\n        />\n        <input \n          type=\"button\" \n          value=\"Submit\" \n          onClick={this.submitForm} />\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport Form from './Form'\n\nclass App extends Component {\n  state = {\n    characters: [],\n  }\n\n  removeCharacter = (index) => {\n    const {characters} = this.state\n      this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      }),\n    })\n  }\n\n  handleSubmit = (character) => {\n    this.setState({characters: [...this.state.characters, character]})\n  }\n\n  render() {\n    const { characters } = this.state\n\n    return (\n      <div className=\"container\">\n        <Table characterData={characters} removeCharacter={this.removeCharacter} />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n  \n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n//import App from './Api'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}